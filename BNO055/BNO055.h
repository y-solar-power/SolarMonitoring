#ifndef _BNO055_H_
#define _BNO055_H_

class BNO055{
  public:
    BNO055(uint8_t);
    uint8_t i2c_read_8(uint8_t address);
    uint16_t i2c_read_16(uint8_t address);
    uint8_t GetBNO055ChipId();
    uint8_t GetAccChipId();
    uint8_t GetMagChipId();
    uint8_t GetGyroChipId();
    uint16_t GetSwRevId();
    uint8_t GetBlRevId();
    uint8_t GetPageId();
    void SetPageId(uint8_t val);
    int16_t GetAccelerationX();
    int16_t GetAccelerationY();
    int16_t GetAccelerationZ();
    int16_t GetMagX();
    int16_t GetMagY();
    int16_t GetMagZ();
    int16_t GetGyroX();
    int16_t GetGyroY();
    int16_t GetGyroZ();
    int16_t GetEulDataX();
    int16_t GetEulDataY();
    int16_t GetEulDataZ();
    int16_t GetQuaDataW();
    int16_t GetQuaDataX();
    int16_t GetQuaDataY();
    int16_t GetQuaDataZ();
    int16_t GetLiaDataX();
    int16_t GetLiaDataY();
    int16_t GetLiaDataZ();
    int16_t GetGrvDataX();
    int16_t GetGrvDataY();
    int16_t GetGrvDataZ();
    uint8_t GetTemp();
    uint8_t GetCalibStat();
    uint8_t GetStResult();
    uint8_t GetInaSta();
    uint8_t GetSysClkStatus();
    uint8_t GetSysStatus();
    uint8_t GetSysErr();
    uint8_t GetUnitSel();
    void SetUnitSel(uint8_t val);
    uint8_t GetOprMode();
    void SetOprMode(uint8_t val);
    uint8_t GetPwrMode();
    void SetPwrMode(uint8_t val);
    uint8_t GetSysTrigger();
    void SetSysTrigger(uint8_t val);
    uint8_t GetTempSource();
    void SetTempSource(uint8_t val);
    uint8_t GetAxisMapConfig();
    void SetAxisMapConfig(uint8_t val);
    uint8_t GetAxisMapSign();
    void SetAxisMapSign(uint8_t val);
    uint16_t GetSicMatrix0();
    void SetSicMatrix0(uint16_t val);
    uint16_t GetSicMatrix1();
    void SetSicMatrix1(uint16_t val);
    uint16_t GetSicMatrix2();
    void SetSicMatrix2(uint16_t val);
    uint16_t GetSicMatrix3();
    void SetSicMatrix3(uint16_t val);
    uint16_t GetSicMatrix4();
    void SetSicMatrix4(uint16_t val);
    uint16_t GetSicMatrix5();
    void SetSicMatrix5(uint16_t val);
    uint16_t GetSicMatrix6();
    void SetSicMatrix6(uint16_t val);
    uint16_t GetSicMatrix7();
    void SetSicMatrix7(uint16_t val);
    uint16_t GetSicMatrix8();
    void SetSicMatrix8(uint16_t val);
    uint16_t GetAccOffsetX();
    void SetAccOffsetX(uint16_t val);
    uint16_t GetAccOffsetY();
    void SetAccOffsetY(uint16_t val);
    uint16_t GetAccOffsetZ();
    void SetAccOffsetZ(uint16_t val);
    uint16_t GetMagOffsetX();
    void SetMagOffsetX(uint16_t val);
    uint16_t GetMagOffsetY();
    void SetMagOffsetY(uint16_t val);
    uint16_t GetMagOffsetZ();
    void SetMagOffsetZ(uint16_t val);
    uint16_t GetGyrOffsetX();
    void SetGyrOffsetX(uint16_t val);
    uint16_t GetGyrOffsetY();
    void SetGyrOffsetY(uint16_t val);
    uint16_t GetGyrOffsetZ();
    void SetGyrOffsetZ(uint16_t val);
    uint16_t GetAccRadius();
    void SetAccRadius(uint16_t val);
    uint16_t GetMagRadius();
    void SetMagRadius(uint16_t val);
    uint8_t GetAccConfig();
    void SetAccConfig(uint8_t val);
    uint8_t GetMagConfig();
    void SetMagConfig(uint8_t val);
    uint8_t GetGyrConfig0();
    void SetGyrConfig0(uint8_t val);
    uint8_t GetGyrConfig1();
    void SetGyrConfig1(uint8_t val);
    uint8_t GetAccSleepConfig();
    void SetAccSleepConfig(uint8_t val);
    uint8_t GetGyrSleepConfig();
    void SetGyrSleepConfig(uint8_t val);
    uint8_t GetIntMsk();
    void SetIntMsk(uint8_t val);
    uint8_t GetIntEn();
    void SetIntEn(uint8_t val);
    uint8_t GetAccAmThres();
    void SetAccAmThres(uint8_t val);
    uint8_t GetAccIntSettings();
    void SetAccIntSettings(uint8_t val);
    uint8_t GetAccHgDuration();
    void SetAccHgDuration(uint8_t val);
    uint8_t GetAccHgThres();
    void SetAccHgThres(uint8_t val);
    uint8_t GetAccNmThres();
    void SetAccNmThres(uint8_t val);
    uint8_t GetAccNmSet();
    void SetAccNmSet(uint8_t val);
    uint8_t GetGyrIntSetting();
    void SetGyrIntSetting(uint8_t val);
    uint8_t GetGyrHrXSet();
    void SetGyrHrXSet(uint8_t val);
    uint8_t GetGyrDurX();
    void SetGyrDurX(uint8_t val);
    uint8_t GetGyrHrYSet();
    void SetGyrHrYSet(uint8_t val);
    uint8_t GetGyrDurY();
    void SetGyrDurY(uint8_t val);
    uint8_t GetGyrHrZSet();
    void SetGyrHrZSet(uint8_t val);
    uint8_t GetGyrDurZ();
    void SetGyrDurZ(uint8_t val);
    uint8_t GetGyrAmThres();
    void SetGyrAmThres(uint8_t val);
    uint8_t GetGyrAmSet();
    void SetGyrAmSet(uint8_t val);
  private:
    uint8_t _i2caddr;
    void i2c_write(uint8_t *data,uint8_t num);
    void i2c_read(uint8_t data[],uint8_t num);
};

#endif